@model Entities.Models.MainGraphModel
@{
    ViewData["Title"] = "ShowGraph";
    var counter = 0;
}

<div class="container">
    <!-- Column Chart -->
    @foreach (var item in Model.OwnersGraphs)
    {
        <div class="row">
            <div class="col-12">
                <canvas id="client-column-stacked-@counter" height="400"></canvas>
            </div>
        </div>
        counter++;
    }

    <div class="row">
        <div class="col-12">
            <canvas id="column-stacked" height="400"></canvas>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://frontendtemplate.gear.host/ModernAdmin/app-assets/vendors/js/charts/chart.min.js"></script>
    <script>
        /*=========================================================================================
        File Name: column.js
        Description: Chartjs column chart
        ----------------------------------------------------------------------------------------
        Item Name: Modern Admin - Clean Bootstrap 4 Dashboard HTML Template
        Author: PIXINVENT
        Author URL: http://www.themeforest.net/user/pixinvent
==========================================================================================*/

        // Column chart
        // ------------------------------
        $(window).on("load", function () {
            var color = ['#FF6347','#FFEFD5','#CD5C5C','#90EE90','#48D1CC','#87CEFA','#9370DB','#9370DB','#DB7093','#FFF0F5','#778899','#DAA520'];
            var model = '@Html.Raw(Json.Serialize(Model))';
            var jsonModel = JSON.parse(model);
            var datasets = [];

            $.each(jsonModel.stagesGraph, function (key, value) {
                var set = {
                    label: value.label,
                    data: value.data,
                    backgroundColor: color[key],
                    hoverBackgroundColor: color[key],
                    borderColor: "transparent"
                };

                datasets.push(set);
            });


            // Get the context of the Chart canvas element we want to select
            var ctx = $("#column-stacked");

            // Chart Options
            var chartOptions = {
                title: {
                    display: true,
                    text: "Deals amount by stage in workorder",
                    fontColor: 'white',
                    fontSize: 18,
                },
                tooltips: {
                    mode: 'label'
                },
                responsive: true,
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        fontColor: 'white'
                    }
                },
                maintainAspectRatio: false,
                responsiveAnimationDuration: 500,
                scales: {
                    xAxes: [{
                        stacked: true,
                        fontColor: "white",
                        display: true,
                        gridLines: {
                            color: "#fff",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }],
                    yAxes: [{
                        stacked: true,
                        display: true,
                        fontColor: "white",
                        gridLines: {
                            color: "#fff",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }]
                }
            };

            var customDataSet;



            // Chart Data
            var chartData = {
                labels: ["WorkOrder 1", "WorkOrder 2", "WorkOrder 3", "WorkOrder 4", "WorkOrder 5"],
                datasets: datasets
            };

            var config = {
                type: 'bar',

                // Chart Options
                options: chartOptions,

                data: chartData
            };

            // Create the chart
            var lineChart = new Chart(ctx, config);

            $.each(jsonModel.ownersGraphs, function (key, value) {
                console.log(value)
                var userctx = $("#client-column-stacked-"+key);
                console.log(userctx);
            // Chart Options
            var chartOptions2 = {
                title: {
                    display: true,
                    text: "Deals Amount of " + value.name,
                    fontColor: 'white',
                    fontSize: 18,
                },
                tooltips: {
                    mode: 'label'
                },
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        fontColor: 'white'
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                responsiveAnimationDuration: 500,
                scales: {
                    xAxes: [{
                        stacked: true,
                        display: true,
                        gridLines: {
                            color: "#fff",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }],
                    yAxes: [{
                        stacked: true,
                        display: true,
                        gridLines: {
                            color: "#fff",
                            drawTicks: false,
                        },
                        scaleLabel: {
                            display: true,
                        }
                    }]
                }
            };

            var usersdatasets = [];

            $.each(value.ownersGrap, function (key, value) {
                var set = {
                    label: value.label,
                    data: value.data,
                    backgroundColor: color[key],
                    hoverBackgroundColor: color[key],
                    borderColor: "transparent"
                };

                usersdatasets.push(set);
            });



            // Chart Data
            var chartData2 = {
                labels: ["WorkOrder 1", "WorkOrder 2", "WorkOrder 3", "WorkOrder 4", "WorkOrder 5"],
                fontColor: 'white',
                datasets: usersdatasets
            };

            var config2 = {
                type: 'bar',

                // Chart Options
                options: chartOptions2,

                data: chartData2
            };

            // Create the chart
            var lineChart2 = new Chart(userctx, config2);

            });




        });
    </script>
}

